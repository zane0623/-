version: '3.8'

services:
  # 前端服务
  frontend:
    build: 
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NEXT_PUBLIC_BLOCKCHAIN_RPC=https://polygon-rpc.com
      - NEXT_PUBLIC_CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
    depends_on:
      - backend
    networks:
      - lychee-network

  # 后端服务
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/lychee_db
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - BLOCKCHAIN_RPC=https://polygon-rpc.com
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
    depends_on:
      - postgres
      - redis
    networks:
      - lychee-network

  # 数据库
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=lychee_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - lychee-network

  # 缓存
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - lychee-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - lychee-network

volumes:
  postgres_data:
  redis_data:

networks:
  lychee-network:
    driver: bridge
